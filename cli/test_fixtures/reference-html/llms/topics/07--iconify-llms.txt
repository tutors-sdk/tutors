<SYSTEM> This is the Tutors course  Reference Course topic  Iconify by A reference course containing all supported learning objects</SYSTEM>


# Topic :  Iconify

 
Using Iconify defined icons instead of image files
## Talk : Lecture 10

 
A short summary of the talk, no more than two sentences.
## Talk : Lecture 11

 
Provide a short summary, perhaps supported by a representative image.
## Lab : Lab-07

 
A set of practical instructions or a walk-though

### Step :  Objectives

 
A set of practical instructions or a walk-though

### Step :  Text

 
It's very easy to make some words **bold** and other words *italic* with Markdown. You can even [inset a link to Google](http://google.com)


## Lists

Sometimes you want numbered lists:

1. One
2. Two
3. Three

Sometimes you want bullet points:

* Start a line with a star
* Profit!

Alternatively,

- Dashes work just as well
- And if you have sub points, put two spaces before the dash or star:
  - Like this
  - And this

## Images

If you want a link to a local image, place the image in the `img` folder and then insert a link like this:

![](img/02.png)

Alternatively you can directly link to images on the web:

![Image of Yaktocat](https://octodex.github.com/images/yaktocat.png)

The above includes a title.

# Structured documents

Sometimes it's useful to have different levels of headings to structure your documents. Start lines with a `#` to create headings. Multiple `##` in a row denote smaller heading sizes.

### This is a third-tier heading

You can use one `#` all the way up to `######` six for different heading sizes.

If you'd like to quote someone, use the > character before the line:

> Coffee. The finest organic suspension ever devised... I beat the Borg with it.
> - Captain Janeway

There are many different ways to style code with GitHub's markdown. If you have inline code blocks, wrap them in backticks: `var example = true`.  If you've got a longer block of code, you can indent with four spaces:

    if (isAwesome){
      return true
    }

GitHub also supports something called code fencing, which allows for multiple lines without indentation:

~~~
if (isAwesome){
  return true
}
~~~

And if you'd like to use syntax highlighting, include the language:

~~~javascript
if (isAwesome){
  return true
}
~~~


### Step :  Tables, Lines and Images

 

Tables can look like this:

| Option | Description |
| ------ | ----------- |
| data   | path to data files to supply the data that will be passed into templates. |
| engine | engine to be used for processing templates. Handlebars is the default. |
| ext    | extension to be used for dest files. |

Right aligned columns

| Option | Description |
| ------:| -----------:|
| data   | path to data files to supply the data that will be passed into templates. |
| engine | engine to be used for processing templates. Handlebars is the default. |
| ext    | extension to be used for dest files. |

---

A horizontal rules above and below

---

Some more images:

![](img/01.png)

A few sentences on the purpose of the lab. Avoid bullet points here for formatting reasons.
And if you'd like to use syntax highlighting, include the language:

~~~javascript
if (isAwesome){
  return true
}
~~~

- Dashes work just as well
- And if you have sub points, put two spaces before the dash or star:
  - Like this
  - And this

~~~typescript
let flatLos = flattenNestedLosArrays(los);
let result: string[] = [];
flatLos.forEach((obj) => {
~~~

If you'd like to quote someone, use the > character before the line:
Coffee. The finest organic suspension ever devised... I beat the Borg with it.

```javascript
testing ticked fence
```

Some more code :

~~~javascript
const donationSchema = new Schema({
  amount: Number,
  method: String,
  lat: String,
  lng: String,
  donor: {
    type: Schema.Types.ObjectId,
    ref: "User",
  },
  candidate: {
    type: Schema.Types.ObjectId,
    ref: "Candidate",
  },
});
~~~ 



### Step :  Links and Code Blocks

 
You can inert links in bullet points:

- <http://github.com>
- <http://bitbucket.dom>


More Code Block examples

~~~
  publish(path, course) {
    const basePath = '../' + path + '/' + this.folder;
    futils.initEmptyPath(basePath);
    this.resources = this.talks.concat(this.labs);
    console.log(this.title);
    this.publishTalks(basePath);
    this.publishLabs(basePath, course);
  }
~~~

This was autodetected as javascript. This one is html:

~~~html
<div class="ui segment pushable">
  <div class="pusher">
    <div class="ui basic segment">
      <br>
      {% for chapter in chapters %}
      <div  class="ui tab segment lab" data-tab="{{chapter.shortTitle}}">
        {{ chapter.content }}
      </div>
     {% endfor %}
    </div>
  </div>
</div>
~~~

### Step :  Images

 
Some more images

![](img/04.png)

###  You can put a title here

![](img/03.png)


This is some text 
### Step :  Latex

 
Latex support via the [Katex](https://katex.org/) Library.

### Example 0

$
E=mc^2
$

### Example 1

This is an inline exampe: $c = \pm\sqrt{a^2 + b^2}$ with text before and after

### Example 2


$
x=\frac{ -b\pm\sqrt{ b^2-4ac } } {2a}
$

### Example 3


$
f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi
$

### Example 4


$
g(x) = 3x^4 + 2x^2
$

### Example 5


$
x=\frac{ -b\pm\sqrt{ b^2-4ac } } {2a}
\sum_{i=1}^n i^3 = \left( \frac{n(g(n)+1)} 2 \right) ^2
c = \pm\sqrt{a^2 + b^2}
$

### Example 6

$
\frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} = 1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}} {1+\frac{e^{-8\pi}} {1+\cdots} } } }
$

### Example 7

$
1 +  \frac{q^2}{(1-q)}+\frac{q^6}{(1-q)(1-q^2)}+\cdots = \prod_{j=0}^{\infty}\frac{1}{(1-q^{5j+2})(1-q^{5j+3})}, \quad\quad \text{for }\lvert q\rvert<1.
$
### Step :  Reference

 

# h1 Heading
## h2 Heading
### h3 Heading
#### h4 Heading
##### h5 Heading
###### h6 Heading


## Horizontal Rules

___

---

***


## Quotes

"Smartypants, double quotes" and 'single quotes' and `back tick` quotes


## Emphasis

**This is bold text**

__This is bold text__

*This is italic text*

_This is italic text_

~~Strikethrough~~


## Blockquotes


> Blockquotes can also be nested...
>> ...by using additional greater-than signs right next to each other...
> > > ...or with spaces between arrows.


## Lists

Unordered

+ Create a list by starting a line with `+`, `-`, or `*`
+ Sub-lists are made by indenting 2 spaces:
  - Marker character change forces new list start:
    * Ac tristique libero volutpat at
    + Facilisis in pretium nisl aliquet
    - Nulla volutpat aliquam velit
+ Very easy!

Ordered

1. Lorem ipsum dolor sit amet
2. Consectetur adipiscing elit
3. Integer molestie lorem at massa


1. You can use sequential numbers...
1. ...or keep all the numbers as `1.`

Start numbering with offset:

57. foo
1. bar


## Code

Inline `code`

Indented code

    // Some comments
    line 1 of code
    line 2 of code
    line 3 of code


Block code "fences"

```
Sample text here...
```

Syntax highlighting

``` js
var foo = function (bar) {
  return bar++;
};

console.log(foo(5));
```

## Tables

| Option | Description |
| ------ | ----------- |
| data   | path to data files to supply the data that will be passed into templates. |
| engine | engine to be used for processing templates. Handlebars is the default. |
| ext    | extension to be used for dest files. |

Right aligned columns

| Option | Description |
| ------:| -----------:|
| data   | path to data files to supply the data that will be passed into templates. |
| engine | engine to be used for processing templates. Handlebars is the default. |
| ext    | extension to be used for dest files. |


## Links

[link text](http://dev.nodeca.com)

[link with title](http://nodeca.github.io/pica/demo/ "title text!")


## Images

![Minion](https://octodex.github.com/images/minion.png)
![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg "The Stormtroopocat")

Like links, Images also have a footnote style syntax

![Alt text][id]

With a reference later in the document defining the URL location:

[id]: https://octodex.github.com/images/dojocat.jpg  "The Dojocat"


### [Emojies](https://github.com/markdown-it/markdown-it-emoji)

Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum

see [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.


### [Emojies](https://github.com/markdown-it/markdown-it-emoji)

> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:

### Image Tools

Use this tool to resize hi definition images to "canvas" dimensions:

- __[pica](https://nodeca.github.io/pica/demo/)__ - high quality and fast image
  resize in browser.





### Step :  Exercises & Archives

 
You can link to zipped archives:

- [Solutions](./archives/archive.zip)

This archive must be placed in the `archives` folder as shown above.

## Exercise 1:

Instructions for exercise 1.

## Exercise 2:

Instructions for exercise 2.

## Exercise 3:

Instructions for exercise 3.
